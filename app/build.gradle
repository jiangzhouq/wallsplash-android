apply plugin: 'com.android.application'
//wrap with try and catch so the build is working even if the signing stuff is missing
try {
    apply from: '../../../signing.gradle'
} catch (ex) {
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.mikepenz.unsplash"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "0.3.0"
    }
    buildTypes {
//        debug {
//            applicationIdSuffix = ".debug"
//            versionNameSuffix = "-DEBUG"
//            try {
//                signingConfig signingConfigs.debug
//            } catch (ex) {
//            }
//            minifyEnabled false
//        }
        release {
//            try {
//                signingConfig signingConfigs.release
//            } catch (ex) {
//            }
//            zipAlignEnabled true
//            minifyEnabled true
//
//            proguardFile 'proguard-gson.pro'
//            proguardFile 'proguard-square-picasso.pro'
//            proguardFile 'proguard-square-retrofit.pro'
//            proguardFile 'proguard-project.pro'
//            proguardFile getDefaultProguardFile('proguard-android.txt')
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = outputFile.name.replace(".apk", "-v" + defaultConfig.versionName + "-c" + defaultConfig.versionCode + ".apk")
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }
    }
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    //Android Asynchronous Networking and Image Loading
    compile 'com.koushikdutta.ion:ion:2.1.6'
    //which lets you extract prominent colors from an image
    compile 'com.android.support:palette-v7:23.1.0'
    //This library includes support for material design user interface implementations.
    compile 'com.android.support:appcompat-v7:23.1.0'
    //This library adds support for the CardView widget
    compile 'com.android.support:cardview-v7:23.1.0'
    //This class provides support for the RecyclerView widget
    compile 'com.android.support:recyclerview-v7:23.1.0'
    compile 'com.sch.rfview:AnimRefreshRecyclerView:1.0.3@aar'
    //Type-safe HTTP client for Android
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    //An HTTP & SPDY client for Android and Java applications
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.5.0'
    //A powerful image downloading and caching library for Android
    compile 'com.squareup.picasso:picasso:2.5.2'
    //观察者模式
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.nispok:snackbar:2.11.0'
    compile 'com.gu:option:1.3'
    compile 'com.github.lzyzsd:circleprogress:1.2.0@aar'
    compile 'com.github.xiprox.errorview:library:1.0.0'
    compile 'com.google.android.apps.muzei:muzei-api:+'
    compile('com.mikepenz:aboutlibraries:5.2.6@aar') {
        transitive = true
    }
    compile('com.mikepenz:materialdrawer:4.4.4@aar') {
        transitive = true
    }
    compile 'com.mikepenz:iconics-core:1.7.9@aar'
    compile 'com.mikepenz:google-material-typeface:1.2.0.1@aar'
    compile 'com.mikepenz:fontawesome-typeface:4.4.0.1@aar'
    compile 'de.hdodenhof:circleimageview:2.0.0'
    compile files('libs/panframe-1.9.jar')
}
